{"version":3,"file":"js/916.a14423fd.js","mappings":"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N,EAAIW,YAAYoB,GAAG,CAAC,MAAQ,SAASC,GAAQhC,EAAIiC,WAAY,CAAK,KAAKjC,EAAImC,KAAMnC,EAAa,UAAEE,EAAG,QAAQ,CAACI,MAAM,CAAC,WAAaN,EAAI0E,gBAAgB3C,GAAG,CAAC,MAAQ/B,EAAI2E,oBAAoB3E,EAAImC,MAAM,GAAGjC,EAAG,MAAM,CAACG,YAAY,qBAAqB,CAACH,EAAG,SAAS,CAACG,YAAY,mBAAmB0B,GAAG,CAAC,MAAQ/B,EAAI4E,YAAY,CAAC1E,EAAG,OAAO,CAACF,EAAIkC,GAAG,sBACzsD,EACI,EAAkB,GC+CtB,eACA,qBACA,YACA,gBACA,WAEA,OACA,OACA,YACA,aAEA,IACA,qBACA,aAEA,OACA,WACA,cAGA,gBACA,OACA,aACA,aACA,YACA,+CACA,QACA,CACA,aACA,cACA,YACA,YACA,aAEA,CACA,mBACA,oBACA,gBACA,YACA,aAEA,CACA,aACA,cACA,cAEA,CACA,eACA,gBACA,WACA,eAEA,CACA,gBACA,iBACA,WACA,mCAEA,CACA,gBACA,iBACA,aAGA,wBACA,qEAEA,gBACA,qBACA,QACA,CACA,aACA,cACA,YACA,YACA,YACA,UAEA,CACA,mBACA,oBACA,gBACA,YACA,YACA,UAEA,CACA,aACA,cACA,aACA,YACA,UAEA,CACA,eACA,gBACA,WACA,gBAGA,sBACA,iBACA,qCAGA,EACA,mBACA,0CACA,oEACA,gBAEA,EACA,UACA,kCACA,iDACA,EACA,iBACA,eACA,oCACA,GAEA,WACA,eACA,iBACA,IAGA,SACA,4BACA,kBACA,mBACA,wCACA,2CACA,EACA,uBACA,gEACA,EACA,kCACA,oDACA,EACA,+BACA,iDACA,EACA,+B,EAAA,OACA,sEACA,kCAEA,oCACA,SAEA,yEACA,UACA,EACA,qBACA,4EACA,IACA,gCAEA,iBACA,EACA,qB,UACA,mGAEA,kCACA,yCAEA,sBACA,qBAEA,iCACA,qCACA,2DACA,yGACA,+GACA,yGACA,iBACA,EACA,uBACA,mCACA,oCACA,UAEA,EACA,yBACA,qCACA,8GACA,4CACA,EACA,0BACA,eACA,2BACA,CACA,aACA,yDACA,wDACA,iDAGA,GACA,sEAEA,EACA,sB,QACA,WACA,MAEA,gDAEA,MAMA,4BALA,OACA,oBACA,aACA,mBACA,gBAEA,qBAEA,yCACA,qCAEA,SAEA,4CACA,4CACA,mDACA,MAGA,uDAEA,SAEA,SACA,gBACA,0CACA,iBACA,QAEA,gCACA,2BACA,IACA,wBAOA,OALA,QACA,QACA,oBACA,YAEA,C,OAEA,QAEA,6BACA,uBACA,IACA,wBAOA,OALA,QACA,QACA,oBACA,YAEA,C,CAGA,QACA,IAGA,aACA,sBAEA,QACA,QACA,WACA,gBAEA,CAGA,iCACA,iBACA,2BACA,IACA,wBAOA,OALA,QACA,QACA,oBACA,YAEA,C,CAEA,QACA,IAGA,kCAEA,wCACA,IACA,cAIA,mCACA,mBACA,2BACA,IACA,aAOA,OALA,QACA,QACA,oBACA,YAEA,C,CAEA,QACA,IAGA,QACA,QACA,WACA,YAIA,QACA,QACA,WACA,W,CAIA,yCACA,oCACA,kBAGA,6BApHA,CALA,CALA,CAXA,CA0IA,EACA,wB,MACA,kBACA,0EACA,GACA,sBAEA,2BACA,CACA,0CACA,gCAGA,yDACA,iBAEA,EACA,uBACA,mBAEA,eACA,SAEA,uCACA,oDAEA,8EACA,aAIA,gCACA,mBACA,eACA,MAEA,6BACA,eAEA,cACA,MAIA,mBACA,UAGA,iBACA,UACA,oBAGA,6BACA,eAEA,sBAXA,CAXA,C,CAVA,CAHA,CAoCA,EACA,uC,MACA,yGACA,EACA,2BACA,2BACA,CACA,eAGA,KC1c4O,ICQxO,GAAY,OACd,EACA,EACA,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,QCWhC,eACA,iBACA,YACA,gBACA,gBACA,WAEA,gBACA,OACA,aACA,YACA,wBACA,QACA,CACA,aACA,cACA,YACA,YACA,aAEA,CACA,gBACA,iBACA,YAEA,CACA,UACA,iBACA,WACA,oCAGA,wBACA,qEAGA,EACA,UACA,iBACA,8BACA,EACA,YACA,eACA,wCACA,GAEA,SACA,eACA,gDACA,IAGA,mB,gHACA,uE,cAAA,SACA,sK,cCpFiP,ICQ7O,GAAY,OACd,EACAnC,EACAqC,GACA,EACA,KACA,KACA,MAIF,EAAe,EAAiB,O","sources":["webpack://my-trello-frontend/./src/views/BoardView.vue?3819","webpack://my-trello-frontend/./src/components/LabelEditable.vue?c5de","webpack://my-trello-frontend/src/components/LabelEditable.vue","webpack://my-trello-frontend/./src/components/LabelEditable.vue?c239","webpack://my-trello-frontend/./src/components/LabelEditable.vue","webpack://my-trello-frontend/./src/components/List.vue?40d7","webpack://my-trello-frontend/src/components/List.vue","webpack://my-trello-frontend/./src/components/List.vue?9fc2","webpack://my-trello-frontend/./src/components/List.vue","webpack://my-trello-frontend/src/views/BoardView.vue","webpack://my-trello-frontend/./src/views/BoardView.vue?fe74","webpack://my-trello-frontend/./src/views/BoardView.vue"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',{staticClass:\"board__container\"},[_c('LabelEditable',{attrs:{\"name\":\"title\",\"id\":_vm.labelId,\"api\":`board/${_vm.$route.params.board_id}`,\"minLength\":_vm.formSchema.fields[0]?.minLength ?? _vm.$store.state.defaultMinLength,\"custom-class\":\"label__editable\"},model:{value:(_vm.boardTitle),callback:function ($$v) {_vm.boardTitle=$$v},expression:\"boardTitle\"}}),_c('div',{staticClass:\"board__item\"},[_vm._l((_vm.board && _vm.board.lists ? _vm.board.lists : []),function(list){return _c('ListComponent',{key:list.id,attrs:{\"title\":list.title,\"cards\":list.cards,\"id\":list.id}})}),_c('button',{staticClass:\"button__add\",on:{\"click\":function($event){_vm.showModal = true}}},[_c('span',{staticClass:\"material-symbols-outlined\"},[_vm._v(\" add_circle \")])]),(_vm.showModal)?_c('Modal',{attrs:{\"formSchema\":_vm.formSchema},on:{\"close\":function($event){_vm.showModal = false}}}):_vm._e()],2)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[(!_vm.isEditing)?_c('div',{class:[_vm.customClass, { editing: _vm.isEditing, 'not-editing': !_vm.isEditing }, 'break-word'],on:{\"click\":_vm.startEditing,\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.startEditing.apply(null, arguments)}}},[_vm._v(\" \"+_vm._s(_vm.inputValue)+\" \")]):_vm._e(),_c('label',{attrs:{\"for\":_vm.id}},[_c('input',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isEditing),expression:\"isEditing\"}],ref:\"editableInput\",class:[ _vm.customClass, { editing: _vm.isEditing, 'not-editing': !_vm.isEditing } ],attrs:{\"id\":_vm.id,\"api\":_vm.api,\"name\":_vm.name,\"minlength\":_vm.minLength,\"type\":\"text\"},domProps:{\"value\":_vm.inputValue},on:{\"focus\":_vm.onFocus,\"blur\":_vm.onBlur,\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.onEnter.apply(null, arguments)},\"input\":_vm.onInput}})])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div\n      v-if=\"!isEditing\"\n      @click=\"startEditing\"\n      @keydown.enter=\"startEditing\"\n      :class=\"[customClass, { editing: isEditing, 'not-editing': !isEditing }, 'break-word']\"\n    >\n      {{ inputValue }}\n    </div>\n    <label :for=\"id\">\n      <input\n        ref=\"editableInput\"\n        :id=\"id\"\n        :api=\"api\"\n        :value=\"inputValue\"\n        :name=\"name\"\n        :class=\"[ customClass, { editing: isEditing, 'not-editing': !isEditing } ]\"\n        :minlength=\"minLength\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n        @keyup.enter=\"onEnter\"\n        @input=\"onInput\"\n        type=\"text\"\n        v-show=\"isEditing\"\n      />\n    </label>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport { Notyf } from 'notyf';\nimport 'notyf/notyf.min.css';\n\nexport default Vue.extend({\n  name: 'EditableInput',\n  props: {\n    value: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      required: true,\n    },\n    id: {\n      type: [String, Number],\n      required: true,\n    },\n    api: {\n      type: String,\n      required: true,\n    },\n    minLength: {\n      type: Number,\n      required: true,\n    },\n    customClass: {\n      type: String,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      isEditing: false,\n      inputValue: this.value,\n      notyf: new Notyf({\n        duration: 4000,\n        position: {\n          x: 'right',\n          y: 'top',\n        },\n      }),\n    };\n  },\n  methods: {\n    onBlur(event: Event) {\n      this.offFocus(event);\n    },\n    onEnter(event: KeyboardEvent) {\n      const editableInput = event.target as HTMLInputElement;\n      editableInput.blur();\n    },\n    onFocus() {\n      this.isEditing = true;\n    },\n    offFocus(event: Event) {\n      const editableInput = event.target as HTMLInputElement;\n      if (this.isEditing && (this.inputValue.length >= this.minLength)) {\n        editableInput.style.borderColor = 'transparent';\n        this.isEditing = false;\n        this.updateTitle();\n      } else {\n        editableInput.style.borderColor = 'red';\n        this.notyf.error(`Minimal length for this input is ${this.minLength} symbol(s)`);\n      }\n    },\n    updateTitle() {\n      this.$store.dispatch(\n        'updateTitle',\n        {\n          apiPath: this.api,\n          fieldName: this.name,\n          newValue: this.inputValue,\n        },\n      );\n      this.$emit('update', this.inputValue);\n      (this.$refs.editableInput as HTMLInputElement).blur();\n    },\n    onInput(event: Event) {\n      this.inputValue = (event.target as HTMLInputElement).value;\n    },\n    startEditing() {\n      this.isEditing = true;\n      this.$nextTick(() => {\n        (this.$refs.editableInput as HTMLInputElement).focus();\n      });\n    },\n  },\n  watch: {\n    value(newVal) {\n      this.inputValue = newVal;\n    },\n  },\n});\n</script>\n\n<style type=\"css\">\n.label__editable {\n  font-size: 36px;\n  margin: 10px;\n  text-align: center;\n  max-width: 300px;\n}\n\n.editing {\n  border: 2px solid black;\n  background-color: white;\n}\n\n.not-editing {\n  border: 2px solid transparent;\n  background: transparent;\n  max-width: none;\n}\n\n.not-editing:hover {\n  border-radius: 3px;\n  background: rgba(255, 255, 255, 0.2);\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LabelEditable.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./LabelEditable.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./LabelEditable.vue?vue&type=template&id=94cc165a\"\nimport script from \"./LabelEditable.vue?vue&type=script&lang=ts\"\nexport * from \"./LabelEditable.vue?vue&type=script&lang=ts\"\nimport style0 from \"./LabelEditable.vue?vue&type=style&index=0&id=94cc165a&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('div',[_c('div',{staticClass:\"card__item-title\"},[_c('LabelEditable',{attrs:{\"name\":\"title\",\"id\":_vm.id,\"api\":`board/${_vm.$route.params.board_id}/list/${_vm.id}`,\"minLength\":_vm.formSchema.fields[0]?.minLength ?? _vm.$store.state.defaultMinLength,\"custom-class\":\"cart__item-label\"},model:{value:(_vm.listTitle),callback:function ($$v) {_vm.listTitle=$$v},expression:\"listTitle\"}})],1),_c('div',{staticClass:\"card__item\",attrs:{\"id\":'container-' + _vm.id},on:{\"dragenter\":function($event){$event.preventDefault();return _vm.onDragEnter.apply(null, arguments)}}},[_vm._l((_vm.cards),function(card){return _c('button',{key:card.id,staticClass:\"card__item-row break-word\",style:({ backgroundColor: card.color }),attrs:{\"id\":`card-${card.id}`,\"draggable\":\"true\"},on:{\"click\":function($event){return _vm.editCard(card.id)},\"dragstart\":function($event){return _vm.onDragStart($event, card.id)},\"dragover\":function($event){return _vm.onDragOver($event)},\"dragend\":function($event){$event.preventDefault();return _vm.onDragEnd.apply(null, arguments)}}},[_vm._v(\" \"+_vm._s(card.title)+\" \"),_c('button',{staticClass:\"button_rmv material-symbols-outlined\",on:{\"click\":function($event){$event.stopPropagation();return _vm.removeCard(card.id)}}},[_vm._v(\"delete \")])])}),(_vm.showModal)?_c('Modal',{attrs:{\"formSchema\":_vm.formSchema},on:{\"close\":function($event){_vm.showModal = false}}}):_vm._e(),(_vm.cardModal)?_c('Modal',{attrs:{\"formSchema\":_vm.formCardSchema},on:{\"close\":_vm.handleModalClose}}):_vm._e()],2),_c('div',{staticClass:\"card__item-footer\"},[_c('button',{staticClass:\"list-button__add\",on:{\"click\":_vm.openModal}},[_c('span',[_vm._v(\"Create Card\")])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <div class=\"card__item-title\">\n      <LabelEditable\n        v-model=\"listTitle\"\n        name=\"title\"\n        :id=\"id\"\n        :api=\"`board/${$route.params.board_id}/list/${id}`\"\n        :minLength=\"formSchema.fields[0]?.minLength ?? $store.state.defaultMinLength\"\n        custom-class=\"cart__item-label\"\n      />\n    </div>\n    <div class=\"card__item\" :id=\"'container-' + id\"\n         @dragenter.prevent=\"onDragEnter\"\n    >\n      <button v-for=\"card in cards\" :key=\"card.id\"\n              :id=\"`card-${card.id}`\"\n              class=\"card__item-row break-word\"\n              :style=\"{ backgroundColor: card.color }\"\n              draggable=\"true\"\n              @click=\"editCard(card.id)\"\n              @dragstart=\"onDragStart($event, card.id)\"\n              @dragover=\"onDragOver($event)\"\n              @dragend.prevent=\"onDragEnd\">\n        {{ card.title }}\n        <button class=\"button_rmv material-symbols-outlined\"\n                @click.stop=\"removeCard(card.id)\">delete\n        </button>\n      </button>\n\n      <Modal v-if=\"showModal\" @close=\"showModal = false\" :formSchema=\"formSchema\"/>\n      <Modal v-if=\"cardModal\" @close=\"handleModalClose\" :formSchema=\"formCardSchema\"/>\n    </div>\n    <div class=\"card__item-footer\">\n      <button @click=\"openModal\" class=\"list-button__add\">\n        <span>Create Card</span>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Modal from '@/components/Modal.vue';\nimport { ICard } from '@/common/interfaces/card';\nimport { IList } from '@/common/interfaces/list';\nimport { IDragItem } from '@/common/interfaces/dragItem';\nimport LabelEditable from './LabelEditable.vue';\n\nexport default Vue.extend({\n  name: 'ListComponent',\n  components: {\n    LabelEditable,\n    Modal,\n  },\n  props: {\n    title: {\n      type: String,\n      required: true,\n    },\n    id: {\n      type: [String, Number],\n      required: true,\n    },\n    cards: {\n      type: Array as () => ICard[],\n      required: true,\n    },\n  },\n  data() {\n    return {\n      showModal: false,\n      cardModal: false,\n      formSchema: {\n        formName: `Add New Card to ${this.title}`,\n        fields: [\n          {\n            name: 'title',\n            label: 'Title',\n            type: 'text',\n            required: true,\n            minLength: 3,\n          },\n          {\n            name: 'description',\n            label: 'Description',\n            type: 'textarea',\n            required: false,\n            minLength: 3,\n          },\n          {\n            name: 'color',\n            label: 'Color',\n            type: 'color',\n          },\n          {\n            name: 'list_id',\n            label: 'List ID',\n            visible: false,\n            value: this.id,\n          },\n          {\n            name: 'board_id',\n            label: 'Board ID',\n            visible: false,\n            value: this.$route.params.board_id,\n          },\n          {\n            name: 'position',\n            label: 'Position',\n            visible: false,\n          },\n        ],\n        actionName: 'createCard',\n        submitUrlPath: `/board/${this.$route.params.board_id}/card`,\n      },\n      formCardSchema: {\n        formName: 'Edit Card',\n        fields: [\n          {\n            name: 'title',\n            label: 'Title',\n            type: 'text',\n            required: true,\n            minLength: 3,\n            value: '',\n          },\n          {\n            name: 'description',\n            label: 'Description',\n            type: 'textarea',\n            required: false,\n            minLength: 3,\n            value: '',\n          },\n          {\n            name: 'color',\n            label: 'Color',\n            type: 'color',\n            required: true,\n            value: '',\n          },\n          {\n            name: 'list_id',\n            label: 'List ID',\n            visible: false,\n            value: this.id,\n          },\n        ],\n        actionName: 'editCard',\n        submitUrlPath: '',\n        boardId: this.$route.params.board_id,\n      },\n    };\n  },\n  mounted() {\n    const cardId = Number(this.$route.params.card_id);\n    if (!this.cardModal && cardId && this.cards.some((card) => card.id === cardId)) {\n      this.editCard(cardId);\n    }\n  },\n  computed: {\n    draggingElementDetails() {\n      return this.$store.getters.draggingElementDetails;\n    },\n    updatedPosition: {\n      get(): number {\n        return this.$store.state.newPosition;\n      },\n    },\n    listTitle: {\n      get(): string {\n        return this.title;\n      },\n    },\n  },\n  methods: {\n    handleModalClose() {\n      this.cardModal = false;\n      this.updateRoute();\n      this.$store.commit('clearEditableCard');\n      console.log(this.$store.state.editableCard);\n    },\n    updateRoute() {\n      this.$router.push(`/board/${this.$route.params.board_id}`);\n    },\n    updateDraggingElement(newDetails: Partial<IDragItem>) {\n      this.$store.commit('updateDraggingElementDetails', newDetails);\n    },\n    setDraggingElement(newDetails: IDragItem | null) {\n      this.$store.commit('setDraggingElementDetails', newDetails);\n    },\n    getNextPosition(): number {\n      const lists = this.$store.state.board.lists?.find(\n        (list: IList) => list.id === this.id,\n      );\n      if (!lists || !lists.cards || lists.cards.length === 0) {\n        return 0;\n      }\n      const lastPosition = Math.max(...lists.cards.map((card: ICard) => card.position));\n      return lastPosition + 1;\n    },\n    openModal() {\n      const positionField = this.formSchema.fields.find((field) => field.name === 'position');\n      if (positionField) {\n        positionField.value = this.getNextPosition();\n      }\n      this.showModal = true;\n    },\n    editCard(cardId: number) {\n      this.formCardSchema.submitUrlPath = `/board/${this.$route.params.board_id}/card/${cardId}`;\n\n      const boardId = this.$route.params.board_id;\n      const targetPath = `/board/${boardId}/card/${cardId}`;\n\n      if (this.$route.path !== targetPath) {\n        this.$router.push(targetPath);\n      }\n      console.log(`CardID:${cardId}`);\n      console.log(this.$store.state.board);\n      this.$store.commit('setEditableCard', this.findCardById(cardId));\n      this.formCardSchema.fields[0].value = this.$store.state.editableCard?.title;\n      this.formCardSchema.fields[1].value = this.$store.state.editableCard?.description;\n      this.formCardSchema.fields[2].value = this.$store.state.editableCard?.color;\n      this.cardModal = true;\n    },\n    removeCard(cardId: number) {\n      this.$store.dispatch('removeCard', {\n        boardId: this.$route.params.board_id,\n        cardId,\n      });\n    },\n    findCardById(cardId: number) {\n      return this.$store.state.board.lists\n        .map((list: IList) => list.cards?.find((card: ICard) => card.id === cardId))\n        .find((foundCard: ICard | undefined) => foundCard !== undefined) || null;\n    },\n    onDragStart(event: DragEvent, cardId: string) {\n      const draggedItem = event.target as HTMLElement;\n      this.updateDraggingElement(\n        {\n          id: Number(cardId),\n          parentContainer: Number((draggedItem.parentElement as HTMLElement).id.substring(10)),\n          newContainerId: Number((draggedItem.parentElement as HTMLElement).id.substring(10)),\n          position: this.findCardById(Number(cardId)).position,\n        },\n      );\n      if (draggedItem) {\n        setTimeout(() => draggedItem.classList.add('drag__item-clear'), 0);\n      }\n    },\n    onDragEnd(event: DragEvent) {\n      const draggedHTMLItem = event.target as HTMLElement;\n      if (!draggedHTMLItem) return;\n\n      draggedHTMLItem.classList.remove('hidden', 'drag__item-clear');\n\n      const {\n        id,\n        parentContainer,\n        position,\n        newContainerId,\n        newPosition,\n      } = this.draggingElementDetails;\n      if (position == null || newPosition == null) return;\n\n      const oldList = this.getListWithCardContainerId(parentContainer);\n      const newList = this.getListWithCardContainerId(newContainerId);\n\n      if (!oldList || !newList) return;\n\n      oldList.cards = oldList.cards ?? [];\n      newList.cards = newList.cards ?? [];\n      const draggingCard = oldList.cards.find((card: ICard) => card.id === id);\n      if (!draggingCard) return;\n\n      // Remove card from old container\n      oldList.cards = oldList.cards.filter((card: ICard) => card.id !== id);\n\n      const updatedCards = [];\n\n      if (parentContainer === newContainerId) {\n        oldList.cards = oldList.cards\n          .filter((card: ICard) => card.id !== draggingCard.id)\n          .map((card: ICard) => {\n            if (newPosition > position) {\n              // Move down\n              if (card.position > position && card.position <= newPosition) {\n                const updatedCard = {\n                  ...card,\n                  position: card.position - 1,\n                };\n                updatedCards.push({\n                  id: updatedCard.id,\n                  position: updatedCard.position,\n                  list_id: parentContainer,\n                });\n                return updatedCard;\n              }\n            } else if (newPosition < position) {\n              // Move up\n              if (card.position >= newPosition && card.position < position) {\n                const updatedCard = {\n                  ...card,\n                  position: card.position + 1,\n                };\n                updatedCards.push({\n                  id: updatedCard.id,\n                  position: updatedCard.position,\n                  list_id: parentContainer,\n                });\n                return updatedCard;\n              }\n            }\n            return card;\n          });\n\n        // Update position for dragging card\n        draggingCard.position = newPosition;\n        oldList.cards.splice(newPosition, 0, draggingCard);\n\n        updatedCards.push({\n          id: draggingCard.id,\n          position: newPosition,\n          list_id: parentContainer,\n        });\n      } else {\n        // If the card moved into new container\n        // Update positions for other cards in the old container\n        oldList.cards = oldList.cards.map((card: ICard) => {\n          if (card.position > position) {\n            const updatedCard = {\n              ...card,\n              position: card.position - 1,\n            };\n            updatedCards.push({\n              id: updatedCard.id,\n              position: updatedCard.position,\n              list_id: parentContainer,\n            });\n            return updatedCard;\n          }\n          return card; // Without changes\n        });\n\n        // Add card into new container with new position\n        const insertPosition = newPosition !== undefined ? newPosition : newList.cards.length;\n\n        newList.cards.splice(insertPosition, 0, {\n          ...draggingCard,\n          position: insertPosition,\n        });\n\n        // Update positions in the new container\n        newList.cards = newList.cards.map((card: ICard, index: number) => {\n          if (card.position !== index) {\n            const updatedCard = {\n              ...card,\n              position: index,\n            };\n            updatedCards.push({\n              id: updatedCard.id,\n              position: updatedCard.position,\n              list_id: newContainerId,\n            });\n            return updatedCard;\n          }\n          return card; // Without changes\n        });\n\n        // Details for old container\n        updatedCards.push({\n          id: draggingCard.id,\n          position,\n          list_id: parentContainer,\n        });\n\n        // Details for new container\n        updatedCards.push({\n          id: draggingCard.id,\n          position: insertPosition,\n          list_id: newContainerId,\n        });\n      }\n\n      this.$store.dispatch('updateCardsInAPI', {\n        boardId: this.$route.params.board_id,\n        cardsToUpdate: updatedCards,\n      });\n\n      this.setDraggingElement(null);\n    },\n    onDragEnter(event: DragEvent) {\n      const container = event.currentTarget as HTMLElement;\n      const draggedItem = document.getElementById(`card-${this.draggingElementDetails.id}`);\n      if (!draggedItem) return;\n      if (draggedItem.parentElement !== container) {\n        // Join into new container\n        this.updateDraggingElement(\n          {\n            newContainerId: Number(container.id.substring(10)),\n            newPosition: container.children.length,\n          },\n        );\n        draggedItem.parentElement?.removeChild(draggedItem);\n        container.appendChild(draggedItem);\n      }\n    },\n    onDragOver(event: DragEvent) {\n      event.preventDefault();\n\n      const targetItem = event.target as HTMLElement;\n      if (!targetItem.id) return;\n\n      const targetId = Number(targetItem.id.replace('card-', ''));\n      if (!this.cards.some((el) => el.id === targetId)) return;\n\n      const draggedItem = document.getElementById(`card-${this.draggingElementDetails.id}`);\n      if (!draggedItem || draggedItem === targetItem) {\n        return;\n      }\n\n      const rect = targetItem.getBoundingClientRect();\n      const middleY = rect.top + rect.height / 2;\n      const parent = targetItem.parentNode;\n      if (!parent) return;\n\n      const childrenArray = Array.from(parent.children);\n      let newPosition = childrenArray.indexOf(targetItem);\n\n      if (event.clientY > middleY) {\n        newPosition += 1;\n      }\n\n      // If already on the same place\n      const currentIndex = childrenArray.indexOf(draggedItem);\n      if (newPosition === currentIndex) return;\n\n      // Paste item into new place\n      const referenceElement = newPosition < childrenArray.length\n        ? childrenArray[newPosition] : null;\n      parent.insertBefore(draggedItem, referenceElement);\n\n      // Recalculate indexes after inserting\n      const updatedChildrenArray = Array.from(parent.children);\n      const updatedPosition = updatedChildrenArray.indexOf(draggedItem);\n\n      this.setNewPosition(updatedPosition);\n    },\n    getListWithCardContainerId(listId: number) {\n      return this.$store.state.board.lists?.find((list: IList) => list.id === listId);\n    },\n    setNewPosition(newPosition: number) {\n      this.updateDraggingElement(\n        {\n          newPosition,\n        },\n      );\n    },\n  },\n});\n</script>\n\n<style lang=\"scss\">\n.card__item-footer {\n  display: flex;\n  justify-content: center;\n}\n\n.cart__item-label {\n  font-size: 18px;\n  max-width: 150px;\n}\n\n.cart__item-label:hover {\n  background-color: lightgray;\n  font-size: 18px;\n}\n\n.card__item-title {\n  margin: 0;\n  padding: 0;\n  display: flex;\n  background-color: white;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  min-height: 48px;\n  align-items: center;\n  justify-content: center;\n}\n\n.card__item-container {\n  display: block;\n}\n\n.card__item {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  background-color: lightpink;\n  padding: 16px;\n  //border: 1px solid crimson;\n  //border-radius: 8px;\n  border-collapse: collapse;\n  box-shadow: rgba(0, 0, 0, 0.24) 0 3px 30px;\n  min-width: 200px;\n  max-width: 200px;\n  row-gap: 16px;\n}\n\n.card__item-row {\n  position: relative;\n  font-family: \"Montserrat\", sans-serif;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n  background-color: #ffed83;\n  border-radius: 5px;\n  border: 1px solid transparent;\n  cursor: text;\n}\n\n.list-button__add {\n  width: 100%;\n  display: flex;\n  border-radius: 0px;\n  background-color: #9BC53D;\n  padding: 16px;\n  align-items: center;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  border: 0;\n  cursor: pointer;\n  text-transform: uppercase;\n  justify-content: center;\n  color: #ffffff;\n  font-size: 16px;\n\n  &:hover {\n    color: #FDE74C;\n  }\n}\n\n.dragging {\n  cursor: move;\n  opacity: 0.5;\n  background-color: #e73c7e;\n}\n\n.drag__item-clear {\n  background-color: lightgray;\n  box-shadow: 2px 2px 5px rgba(144, 144, 144, 0.39);\n  border: 1px solid gray;\n  color: transparent;\n\n  .button_rmv {\n    visibility: hidden;\n  }\n}\n\n.hidden {\n  display: none;\n}\n\n.drag-rotate {\n  transform: rotate(-3deg) skew(5deg);\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./List.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./List.vue?vue&type=template&id=19c3310b\"\nimport script from \"./List.vue?vue&type=script&lang=ts\"\nexport * from \"./List.vue?vue&type=script&lang=ts\"\nimport style0 from \"./List.vue?vue&type=style&index=0&id=19c3310b&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"board__container\">\n    <LabelEditable\n      v-model=\"boardTitle\"\n      name=\"title\"\n      :id=\"labelId\"\n      :api=\"`board/${$route.params.board_id}`\"\n      :minLength=\"formSchema.fields[0]?.minLength ?? $store.state.defaultMinLength\"\n      custom-class=\"label__editable\"\n    />\n    <div class=\"board__item\">\n      <ListComponent v-for=\"list in board && board.lists ? board.lists : []\" :key=\"list.id\"\n      :title=\"list.title\" :cards=\"list.cards\" :id=\"list.id\"/>\n      <button @click=\"showModal = true\" class=\"button__add\">\n          <span class=\"material-symbols-outlined\">\n          add_circle\n          </span>\n      </button>\n\n      <Modal v-if=\"showModal\" @close=\"showModal = false\" :formSchema=\"formSchema\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue';\nimport Modal from '@/components/Modal.vue';\nimport LabelEditable from '@/components/LabelEditable.vue';\nimport ListComponent from '../components/List.vue';\n\nexport default Vue.extend({\n  name: 'BoardView',\n  components: {\n    ListComponent,\n    LabelEditable,\n    Modal,\n  },\n  data() {\n    return {\n      showModal: false,\n      formSchema: {\n        formName: 'Add New List',\n        fields: [\n          {\n            name: 'title',\n            label: 'Title',\n            type: 'text',\n            required: true,\n            minLength: 3,\n          },\n          {\n            name: 'position',\n            label: 'Position',\n            visible: false,\n          },\n          {\n            name: 'id',\n            label: 'Board ID',\n            visible: false,\n            value: this.$route.params.board_id,\n          },\n        ],\n        actionName: 'createList',\n        submitUrlPath: `/board/${this.$route.params.board_id}/list`,\n      },\n    };\n  },\n  computed: {\n    board() {\n      return this.$store.state.board;\n    },\n    boardTitle: {\n      get() {\n        return this.$store.state.board.title || '';\n      },\n    },\n    labelId: {\n      get() {\n        return this.$route.params.board_id || 'default-id';\n      },\n    },\n  },\n  async mounted() {\n    await this.$store.dispatch('getBoard', this.$route.params.board_id);\n    this.$data.formSchema.fields[1].value = this.$store.state.board?.lists?.length ?? 0;\n  },\n});\n</script>\n\n<style>\n.board__container {\n  margin: 10px;\n}\n.board__item {\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n}\n</style>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BoardView.vue?vue&type=script&lang=ts\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/ts-loader/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./BoardView.vue?vue&type=script&lang=ts\"","import { render, staticRenderFns } from \"./BoardView.vue?vue&type=template&id=087094c6\"\nimport script from \"./BoardView.vue?vue&type=script&lang=ts\"\nexport * from \"./BoardView.vue?vue&type=script&lang=ts\"\nimport style0 from \"./BoardView.vue?vue&type=style&index=0&id=087094c6&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","_setupProxy","staticClass","attrs","labelId","$route","params","board_id","formSchema","fields","minLength","$store","state","defaultMinLength","model","value","callback","$$v","boardTitle","expression","_l","board","lists","list","key","id","title","cards","on","$event","showModal","_v","_e","staticRenderFns","isEditing","class","customClass","editing","startEditing","type","indexOf","_k","keyCode","apply","arguments","_s","inputValue","directives","name","rawName","ref","api","domProps","onFocus","onBlur","onEnter","onInput","component","listTitle","preventDefault","onDragEnter","card","style","backgroundColor","color","editCard","onDragStart","onDragOver","onDragEnd","stopPropagation","removeCard","formCardSchema","handleModalClose","openModal"],"sourceRoot":""}